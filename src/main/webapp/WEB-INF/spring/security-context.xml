<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="LoginSuccess" class="board.study.springsecurity.LoginSuccess"></bean>

	<security:http>

		<security:form-login login-page="/board/loginPage" authentication-success-handler-ref="LoginSuccess" />
		<security:logout logout-url="/logout"/>
		<security:intercept-url pattern="/test/all" access="permitAll"/>
		<security:intercept-url pattern="/test/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/test/admin" access="hasRole('ROLE_ADMIN')" />

		<security:intercept-url pattern="/board/list" access="permitAll"/>
		<security:intercept-url pattern="/board/openRegister" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		<security:intercept-url pattern="/board/up" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
<!--		hasRole 이걸를 사용해야 권한을 검사할수있음-->

		<security:access-denied-handler error-page="/board/accessDeny"/>

	</security:http>

	<security:authentication-manager alias="test"> <!-- 인증매니저 -->
		<security:authentication-provider>

			<security:user-service> <!-- 실제 인증을 처리하는 프로바이더(용자의 인증을 수행하고, 사용자의 권한을 확인하는 메소드를 포함한 인터페이스)를 정의-->
				<security:user name="1234" password="{noop}1234" authorities="ROLE_MEMBER"></security:user>  <!-- 실제 사용자들을 정의-->

				<security:user name="1111" password="{noop}1111" authorities="ROLE_ADMIN"></security:user>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>



</beans>
